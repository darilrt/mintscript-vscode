{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MintScript",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#classes"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#punctuation"
		},
		{
			"include": "#brackets"
		},
		{
			"include": "#other"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.mintscript",
					"match": "\\b(int|str|float|bool|if|elif|else|while|for|in|break|continue|class|as|mut|let|return|import|export)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.mintscript",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.mintscript",
					"match": "\\\\."
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.numeric.mintscript",
					"match": "\\b(\\d+(\\.\\d+)?)\\b"
				},
				{
					"name": "constant.language.mintscript",
					"match": "\\b(true|false|null)\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.mintscript",
					"match": "//.*"
				},
				{
					"name": "comment.block.mintscript",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.mintscript",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\("
				}
			]
		},
		"classes": {
			"patterns": [
				{
					"name": "entity.name.type.class.mintscript",
					"match": "\\b([A-Z][a-zA-Z0-9_]*)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.mintscript",
					"match": "\\b(\\+|-|\\*|/|%|\\^|==|!=|<=|>=|<|>|&&|\\|\\||!|\\?|:|=|\\+=|-=|\\*=|/=|%=|\\^=|\\|=|&=|\\|\\|=|\\+\\+|--|\\.|\\[|\\]|\\(|\\)|\\{|\\}|,|;|->|=>|\\*\\*)\\b"
				}
			]
		},
		"punctuation": {
			"patterns": [
				{
					"name": "punctuation.separator.mintscript",
					"match": "\\b(\\.|\\[|\\]|\\(|\\)|\\{|\\}|,|;|->|=>)\\b"
				}
			]
		},
		"brackets": {
			"patterns": [
				{
					"name": "punctuation.definition.brackets.mintscript",
					"match": "\\b(\\[|\\]|\\(|\\)|\\{|\\})\\b"
				}
			]
		}
	},
	"scopeName": "source.mint"
}